<?php

/**
 * This is the model base class for the table "chain".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Chain".
 *
 * Columns in table "chain" available as properties of the model,
 * followed by relations of table "chain" available as properties of the model.
 *
 * @property string $id
 * @property string $name
 * @property string $nameSlug
 * @property string $parentId
 * @property string $seoId
 * @property string $textField
 * @property string $websiteField
 * @property string $epostField
 * @property string $phoneField
 * @property string $faxField
 * @property string $addressField
 * @property string $zipcodeField
 * @property string $cityField
 * @property string $hasSubchain
 * @property string $url
 *
 * @property Seo $seo
 * @property Location[] $locations
 */
abstract class BaseChain extends GxActiveRecord {
    public  $url;
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'chain';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Chain|Chains', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, nameSlug', 'required'),
			array('name, nameSlug', 'length', 'max'=>255),
			array('parentId, seoId,hasSubchain', 'length', 'max'=>10),
			array('textField', 'length', 'max'=>5024),
			array('websiteField,epostField,addressField,cityField','length','max'=>255),
			array('phoneField,faxField','length','max'=>20),
			array('zipcodeField','length','max'=>10),
			array('parentId, seoId', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, nameSlug, parentId, seoId,textField', 'safe', 'on'=>'search'),
			array('url', 'unsafe'), //in order to can update the record without upload the file again when is not necessary
			array('url', 'file', 'types'=>'jpg, gif, png', 'allowEmpty' => true),  //validate the file extension
		);
	}

	public function relations() {
		return array(
			'seo' => array(self::BELONGS_TO, 'Seo', 'seoId'),
			'locations' => array(self::HAS_MANY, 'Location', 'chainId'),

		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'nameSlug' => Yii::t('app', 'Name Slug'),
			'textField' => Yii::t('app', 'Text Fild'),
			'websiteField' => Yii::t('app', 'Website Field'),
			'epostField'=>Yii::t('app','Epost Field'),
			'phoneField' => Yii::t('app', 'Phone Field'),
			'faxField' => Yii::t('app', 'Fax Field'),
			'addressField' => Yii::t('app', 'Address Field'),
			'zipcodeField' => Yii::t('app', 'Zipcode Field'),
			'cityField' => Yii::t('app', 'City Field'),
			'hasSubchain'=>Yii::t('app','has Subchain'),
			'url'=>Yii::t('app', 'Url'),
			'parentId' => Yii::t('app', 'Parent'),
			'seoId' => null,
			'seo' => null,
			'locations' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('nameSlug', $this->nameSlug, true);
		$criteria->compare('parentId', $this->parentId, true);
		$criteria->compare('seoId', $this->seoId);
		$criteria->compare('textField', $this->textField, true);
		$criteria->compare('websiteField', $this->websiteField, true);
		$criteria->compare('epostField', $this->epostField, true);
		$criteria->compare('phoneField', $this->phoneField, true);
		$criteria->compare('faxField', $this->faxField, true);
		$criteria->compare('addressField', $this->addressField, true);
		$criteria->compare('zipcodeField', $this->zipcodeField, true);
		$criteria->compare('cityField', $this->cityField, true);
		$criteria->compare('hasSubchain', $this->hasSubchain, true);
		$criteria->compare('url', $this->url, true);


		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}