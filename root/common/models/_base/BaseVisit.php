<?php

/**
 * This is the model base class for the table "visit".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Visit".
 *
 * Columns in table "visit" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $time
 * @property string $objectType
 * @property string $objectId
 * @property string $referrer
 * @property string $userAgent
 * @property string $host
 * @property string $ip
 *
 */
abstract class BaseVisit extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'visit';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Visit|Visits', $n);
	}

	public static function representingColumn() {
		return 'time';
	}

	public function rules() {
		return array(
			array('time, objectId', 'required'),
			array('objectType', 'length', 'max'=>8),
			array('objectId', 'length', 'max'=>10),
			array('ip', 'length', 'max'=>45),
			array('referrer, userAgent, host', 'safe'),
			array('objectType, referrer, userAgent, host, ip', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, time, objectType, objectId, referrer, userAgent, host, ip', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'time' => Yii::t('app', 'Time'),
			'objectType' => Yii::t('app', 'Object Type'),
			'objectId' => Yii::t('app', 'Object'),
			'referrer' => Yii::t('app', 'referrer'),
			'userAgent' => Yii::t('app', 'User Agent'),
			'host' => Yii::t('app', 'Host'),
			'ip' => Yii::t('app', 'Ip'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('time', $this->time, true);
		$criteria->compare('objectType', $this->objectType, true);
		$criteria->compare('objectId', $this->objectId, true);
		$criteria->compare('referrer', $this->referrer, true);
		$criteria->compare('userAgent', $this->userAgent, true);
		$criteria->compare('host', $this->host, true);
		$criteria->compare('ip', $this->ip, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}