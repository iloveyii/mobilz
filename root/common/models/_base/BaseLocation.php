<?php

/**
 * This is the model base class for the table "location".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Location".
 *
 * Columns in table "location" available as properties of the model,
 * followed by relations of table "location" available as properties of the model.
 *
 * @property string $id
 * @property string $name
 * @property string $nameSlug
 * @property string $chainId
 * @property string $mallId
 * @property string $seoId
 * @property string $address
 * @property integer $zipcode
 * @property string $countyId
 * @property string $postalCityId
 * @property string $introduction
 * @property string $openHoursInformation
 *
 * @property Chain $chain
 * @property County $county
 * @property PostalCity $postalCity
 * @property Seo $seo
 * @property Mall $mall
 * @property OpenHours[] $openHours
 * @property PhoneNumber[] $phoneNumbers
 * @property Source[] $sources
 */
abstract class BaseLocation extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'location';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Location|Locations', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, nameSlug', 'required'),
			array('zipcode', 'numerical', 'integerOnly'=>true),
			array('name, nameSlug', 'length', 'max'=>255),
			array('chainId, mallId, seoId, countyId, postalCityId', 'length', 'max'=>10),
			array('address', 'length', 'max'=>200),
			array('introduction, openHoursInformation', 'safe'),
			array('chainId, mallId, seoId, address, zipcode, countyId, postalCityId, introduction, openHoursInformation', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, nameSlug, chainId, mallId, seoId, address, zipcode, countyId, postalCityId, introduction, openHoursInformation', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'chain' => array(self::BELONGS_TO, 'Chain', 'chainId'),
			'county' => array(self::BELONGS_TO, 'County', 'countyId'),
			'postalCity' => array(self::BELONGS_TO, 'PostalCity', 'postalCityId'),
			'seo' => array(self::BELONGS_TO, 'Seo', 'seoId'),
			'mall' => array(self::BELONGS_TO, 'Mall', 'mallId'),
			'openHours' => array(self::HAS_MANY, 'OpenHours', 'locationId'),
			'phoneNumbers' => array(self::HAS_MANY, 'PhoneNumber', 'locationId'),
			'sources' => array(self::HAS_MANY, 'Source', 'locationId'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'nameSlug' => Yii::t('app', 'Name Slug'),
			'chainId' => null,
			'mallId' => null,
			'seoId' => null,
			'address' => Yii::t('app', 'Address'),
			'zipcode' => Yii::t('app', 'Zipcode'),
			'countyId' => null,
			'postalCityId' => null,
			'introduction' => Yii::t('app', 'Introduction'),
			'openHoursInformation' => Yii::t('app', 'Open Hours Information'),
			'chain' => null,
			'county' => null,
			'postalCity' => null,
			'seo' => null,
			'mall' => null,
			'openHours' => null,
			'phoneNumbers' => null,
			'sources' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('nameSlug', $this->nameSlug, true);
		$criteria->compare('chainId', $this->chainId);
		$criteria->compare('mallId', $this->mallId);
		$criteria->compare('seoId', $this->seoId);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('zipcode', $this->zipcode);
		$criteria->compare('countyId', $this->countyId);
		$criteria->compare('postalCityId', $this->postalCityId);
		$criteria->compare('introduction', $this->introduction, true);
		$criteria->compare('openHoursInformation', $this->openHoursInformation, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}