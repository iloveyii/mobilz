<?php

/**
 * This is the model base class for the table "openHours".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "OpenHours".
 *
 * Columns in table "openHours" available as properties of the model,
 * followed by relations of table "openHours" available as properties of the model.
 *
 * @property string $id
 * @property string $locationId
 * @property string $name
 * @property integer $isClosed
 * @property string $openAt
 * @property string $closeAt
 * @property string $date
 *
 * @property Location $location
 */
abstract class BaseOpenHours extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'openHours';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'OpenHours|OpenHours', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('locationId, name', 'required'),
			array('isClosed', 'numerical', 'integerOnly'=>true),
			array('locationId', 'length', 'max'=>10),
			array('occasion', 'length', 'max'=>170),
			array('name', 'length', 'max'=>45),
			array('openAt, closeAt, date', 'safe'),
			array('isClosed, openAt, closeAt, date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, locationId, name, isClosed, openAt, closeAt, date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'location' => array(self::BELONGS_TO, 'Location', 'locationId'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'locationId' => null,
			'name' => Yii::t('app', 'Name'),
			'isClosed' => Yii::t('app', 'Is Closed'),
			'openAt' => Yii::t('app', 'Open At'),
			'closeAt' => Yii::t('app', 'Close At'),
			'date' => Yii::t('app', 'Date'),
			'occasion' => Yii::t('app', 'Special occasions'),
			'location' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('locationId', $this->locationId);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('isClosed', $this->isClosed);
		$criteria->compare('openAt', $this->openAt, true);
		$criteria->compare('closeAt', $this->closeAt, true);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('ocassion', $this->occasion, true);
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}